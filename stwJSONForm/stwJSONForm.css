:root {
    --special_color: #00408b;
    --light_color: rgba(0, 84, 159, 0.25);
    --text_color: #3F3F3E;
    --base_color: #FFFFFF;
    --shade_color: #E0E0E0;
    --error_color: #FF0000;
    --input_height: 2em;
    --padding: 0.2em;
}

.stwJSONForm .modified {
    border-color: var(--special_color) !important;
}

.stwJSONForm [disabled],
.stwJSONForm div.JSONData:not([contenteditable]) {
    background-color: #efefef !important;
}

.stwJSONForm .dataRow,
.stwJSONForm[disabled] .newRow,
.stwJSONForm[disabled] .deleteRow,
.stwJSONForm[disabled] .newColumn,
.stwJSONForm[disabled] .deleteColumn {
    display: none;
}

.stwJSONForm .zoom {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 10;
    background-color: var(--base_color);
}

.stwJSONForm .zoom textarea,
.stwJSONForm .zoom [contenteditable] {
    margin: 2px 2px 2px 0;
    height: calc(100% - 5em);
}

.stwJSONForm .newRow,
.stwJSONForm .deleteRow,
.stwJSONForm .newColumn,
.stwJSONForm .deleteColumn {
    cursor: pointer;
    font-size: smaller;
    color: var(--special_color);
}

.columnar {
    table-layout: fixed;
}

.columnar th:first-child {
    width: 1em;
    white-space: nowrap;
    text-align: left;
    padding: 0 0.5em;
}

.stwJSONForm .newRow {
    padding-bottom: 1em;
}

.stwJSONForm .deleteRow {
    width: 1em;
}

.stwJSONForm {
    padding: 0;
}

.stwJSONForm [readonly] {
    border-color: transparent;
    background-color: var(--light_color);
}

.stwJSONForm option:not([selected])[disabled] {
    display: inherit;
}

.stwJSONForm form,
.stwJSONForm table,
.stwJSONForm h2,
.stwJSONForm hr,
.stwJSONForm label:has(textarea, div) {
    border-collapse: collapse;
    width: 100%;
}

.stwJSONForm table.sortable tbody tr:hover {
    cursor: grab;
}

.stwJSONForm td {
    padding: var(--padding);
}

.stwJSONForm caption {
    text-align: left;
    font-weight: bolder;
    border-bottom: thin solid var(--special_color);
    padding-top: 0.5em;
    color: var(--special_color);
}

.stwJSONForm th {
    font-size: smaller;
    background-color: var(--special_color);
    color: var(--base_color);
    padding: var(--padding);
}

.stwJSONForm label,
.stwJSONForm legend {
    display: block;
    font-size: smaller;
    font-weight: bolder;
    line-height: 1em;
}

.stwJSONForm option:not([selected])[disabled] {
    display: none;
}

.stwJSONForm label {
    padding: var(--padding);
    break-inside: avoid;
}

.stwJSONForm label>span {
    display: block;
}

.stwJSONForm *:invalid {
    border-color: var(--error_color);
}

.stwJSONForm>table textarea {
    border: thin solid var(--shade_color);
}

.stwJSONForm label input,
.stwJSONForm label select:not([multiple]) {
    line-height: var(--input_height);
    height: var(--input_height);
    font-size: inherit;
    border: thin solid var(--shade_color);
    padding: 0 var(--padding);
}

td.JSONData,
table.JSONData {
    background-color: inherit;
}

.stwJSONForm option {
    font-size: inherit;
    padding: var(--padding);
}

.stwJSONForm output {
    display: block;
    font-weight: normal;
    border: none;
    padding: var(--padding);
}

.stwJSONForm input[type="text"],
.stwJSONForm input[type=""],
.stwJSONForm textarea,
.stwJSONForm progress,
.stwJSONForm meter {
    width: -webkit-fill-available;
    width: -moz-available;
    width: fill-available;
    border: thin solid var(--shade_color);
    padding: var(--padding);
}

.stwJSONForm input {
    border: thin solid var(--shade_color);
    padding: var(--padding);
}

.stwJSONForm textarea,
.stwJSONForm div[contenteditable] {
    font-size: inherit;
    font-weight: initial;
    padding: var(--padding);
    border: thin solid var(--shade_color);
}

.stwJSONForm>fieldset {
    border: thin solid var(--shade_color);
}

.stwJSONForm>fieldset label {
    font-weight: normal !important;
    font-size: smaller;
    padding-right: 1em;
}

.sticky {
    position: absolute;
    width: auto !important;
    bottom: 0;
    right: 20em;
    background-color: var(--special_color);
    border-radius: 0.5em 0.5em 0 0;
    color: var(--base_color);
    padding: 0.75em 2em !important;
    margin: 0;
    z-index: 1;
}

.stickyWarning {
    position: absolute;
    width: auto !important;
    bottom: 0;
    background-color: var(--error_color) !important;
    border-radius: 0.5em 0.5em 0 0;
    color: var(--base_color) !important;
    padding: 0.75em 2em !important;
    margin: 0;
    z-index: 1;
}