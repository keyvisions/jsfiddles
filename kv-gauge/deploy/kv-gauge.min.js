class kvGauge extends HTMLElement{static observedAttributes=["type","value","values","title"];constructor(){super()}attributeChangedCallback(t,e,i){"linear"===this.getAttribute("type")?this.drawLinearGauge():this.drawGauge()}connectedCallback(){"linear"===this.getAttribute("type")?this.drawLinearGauge():this.drawGauge()}drawGauge(){let t=3*parseFloat(this.getAttribute("value")?.replace(/,/g,"."))/5;t>1?t=1:t>=0&&t<=1||(t=0),this.style.display="inline-block",this.innerHTML=`<svg width="${this.getAttribute("width")||250}" height="${this.getAttribute("height")||150}" viewBox="0 0 250 150">\n            <g transform="translate(125 125) scale(0.75 0.75)">\n                <text class="title" y="-135">${this.getAttribute("title")||""}</text>\n                <path d="m -100 0 A 100 100 0 0 1 -81 -59" fill="transparent" stroke="red" stroke-width="50" />\n                <path d="m -81 -59 A 100 100 0 0 1 -31 -96" fill="transparent" stroke="orange" stroke-width="50" />\n                <path d="m -31 -96 A 100 100 0 0 1 30 -96" fill="transparent" stroke="yellow" stroke-width="50" />\n                <path d="m 30 -96 A 100 100 0 0 1 80 -59" fill="transparent" stroke="lightgreen" stroke-width="50" />\n                <path d="m 80 -59 A 100 100 0 0 1 100 -1" fill="transparent" stroke="green" stroke-width="50" />\n                <g class="hand" transform="rotate(${180*t})">\n                    <path d="m 0 6 a 6 6 0 0 0 0 -12 l -105 6 l 105 6 z" />\n                </g>\n                <text x="-100" y="20" stroke="red">POOR</text>\n                <text x="100" y="20" stroke="green">GOOD</text>\n            </g></svg>`}drawLinearGauge(){const t=this.getAttribute("values").split(";").map((t=>parseFloat(t.replace(/,/g,"."))));5===t.length?(t.push(1.2*Math.max(t[3],t[0]+t[1]+t[2])),this.innerHTML=`\n                <div style="display:flex">\n                    <div style="width:${t[3]/t[5]*100}%; border-left: thin solid black; padding-left:0.25rem">${this.getAttribute("title")||"Budget"}<span style="float:right; width:${t[4]/t[5]*100}%; background:linear-gradient(to right,lightblue,blue); border-left:thin solid lightblue">&nbsp;</span><span style="float:right; padding-right:0.25rem">Target</span></div>\n                  <div style="width:${100*(1-t[3]/t[5])}%; text-align:right; border-right: thin solid black; padding-right: 0.25rem;">&nbsp;</div>\n                </div>\n                <div style="display:flex; border-left: thin solid black; border-bottom:thin solid black; padding-bottom: 2px; border-right: thin solid black;">\n                    <div style="width:${t[0]/t[5]*100}%; background-color:green" title="Fatturato ad oggi € ${t[0].toLocaleString()}">&nbsp;</div>\n                    <div style="width:${t[1]/t[5]*100}%; background-color:lightgreen" title="DDT del mese € ${t[1].toLocaleString()}">&nbsp;</div>&nbsp;<i class="fas fa-truck-monster"></i>\n                </div>\n                    <div style="display:flex; margin-bottom: 1.5rem; padding-top: 2px">\n                    <div style="width:${(t[0]+t[1])/t[5]*100}%">&nbsp;</div>\n                    <div style="width:${t[2]/t[5]*100}%; height: 0.5rem; background-color:yellow" title="Backlog € ${t[2].toLocaleString()}"></div>\n                </div>`):(this.innerHTML="",console.log("usage: Invoiced;Undelivered;Backlog;Budget;Wished"))}}customElements.define("kv-gauge",kvGauge);