class kvBudget extends HTMLElement{static observedAttributes=["title","data","year"];year;title;budget;constructor(){super(),this.getAttribute("year")?this.year=parseInt(this.getAttribute("year")):(year=(new Date).getFullYear(),this.setAttribute("year",year)),this.year=this.getAttribute("title")||""}async attributeChangedCallback(t,e,s){switch(t){case"data":try{const t=new URL(s);t.searchParams.set("year",this.year);const e=await fetch(t);if(!e.ok)throw new Error(`Response status: ${e.status}`);this.budget=await e.json()}catch{this.budget=JSON.parse(s)}this.renderBudget();break;case"title":this.title=s,""!=this.innerHTML&&(this.nextElementSibling.querySelector("caption").innerText=s);break;case"year":this.year=parseInt(s)||(new Date).getFullYear(),this.renderBudget()}}connectedCallback(){this.renderBudget()}editBudget(){const t=JSON.parse(this.getAttribute("selected")),e=this.budget.customers.find((e=>e.code===t.customer))[t.supplier]||[null,null,null,null];fetch(this.getAttribute("data")+`&dettaglio=${t.customer},${t.supplier},W`).then((t=>t.json())).then((s=>{let l=`\n\t\t\t\t\t<label style="display:block; min-height:1.5em;">${t.customer}</label>\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr><th rowspan=2">Supplier</th><th colspan="2">Proposed</th><th colspan="2">Forecasted</th></tr>\n\t\t\t\t\t\t\t\t<tr><th class="C">C</th><th class="W">W</th><th class="C">C</th><th class="W">W</th></tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>${t.supplier}</td>\n\t\t\t\t\t\t\t\t\t<td class="C"><input name="PC" type="number" value="${1e3*e[0]||""}" min="0" max="10000" disabled></td>\n\t\t\t\t\t\t\t\t\t<td class="W"><input name="PW" type="number" value="${1e3*e[1]||""}" min="0" max="10000" disabled></td>\n\t\t\t\t\t\t\t\t\t<td class="C"><input name="FC" type="number" value="${1e3*t[2]||""}" min="0" max="10000"></td>\n\t\t\t\t\t\t\t\t\t<td class="W"><input name="FW" type="number" value="${1e3*t[3]||""}" min="0" max="10000"></td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</form>\n\t\t\t\t\t<br>\n\t\t\t\t\t<table class="budgetData">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr><th><input type="checkbox"></th><th>PN</th><th>Description</th><th>Price</th><th>Qty</th><th>Total</th></tr>\n\t\t\t\t\t\t\t<tr><td></td><td colspan="4">Total</td><td></td></tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>`,n="";s.forEach((t=>{n!=t.design?l+=`<tr><td class="design"><input type="checkbox"></td><td colspan="4">${t.design}</th><td></td></tr>`:l+=`<tr><td><input type="checkbox"></td><td>${t.PN}</td><td>${t.description}</td><td>${t.price}</td><td>${t.qty}</td><td>${t.total}</td></tr>`,n=t.design})),l+="</tbody></table>",this.querySelector(".budgetEditor").innerHTML=l,this.querySelector(".budgetData").addEventListener("click",kvBudget.toggleRows)})).catch((t=>console.log(t.message)))}renderBudget(){try{if(void 0===this.budget)return;this.innerHTML=`\n\t\t\t\t\t\t<div style = "display:grid; column-gap:0.5em;">\n\t\t\t\t\t\t\t<div style="overflow:auto">\n\t\t\t\t\t\t\t\t<label style="display:block; min-height:1.5em;"><input type="checkbox"> Hide inactive suppliers</label>\n\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t<colgroup>\n\t\t\t\t\t\t\t\t\t\t<col />\n\t\t\t\t\t\t\t\t\t\t<col />\n\t\t\t\t\t\t\t\t\t\t<col />\n\t\t\t\t\t\t\t\t\t\t<col span="2" />\n\t\t\t\t\t\t\t\t\t\t${this.budget.suppliers?.map((()=>'<col span="2" />')).join("")}\n\t\t\t\t\t\t\t\t\t</colgroup>\n\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t<tr><th rowspan="2">Customers</th><th rowspan="2">Turnover<br>${this.year-1}</th><th rowspan="2">&emsp;BIBA&emsp;<br>${this.year}</th><th colspan="2">Budget ${this.year+1}</th>${this.budget.suppliers?.map((t=>`<th colspan="2">${t}</th>`)).join("")}</tr>\n\t\t\t\t\t\t\t\t\t\t<tr><th class="C">C</th><th class="W">W</th>${this.budget.suppliers?.map((()=>'<th class="C">C</th><th class="W">W</th>')).join("")}</tr>\n\t\t\t\t\t\t\t\t\t\t<tr class="totals"><td>Totals</td><td></td><td></td><td class="C"></td><td class="W"></td>${this.budget.suppliers?.map((()=>'<td class="C"></td><td class="W"></td>')).join("")}</tr>\n\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t<tbody class="customers"></tbody>\n\t\t\t\t\t\t\t\t\t\x3c!--tfoot>\n\t\t\t\t\t\t\t\t\t<tr><td colspan="5"></td><td colspan="${this.budget.suppliers?.length||1}"><kv-scroll></kv-scroll></td></tr>\n\t\t\t\t\t\t\t\t</tfoot--\x3e\n\t\t\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t\t\t\t<div class="budgetEditor"></div>\n\t\t\t\t</div> `;const t=this.querySelector("tbody.customers");this.budget.customers?.forEach((e=>{let s=`<tr>\n\t\t\t\t\t<td><span style="white-space:pre; font-family: monospace">${e.code}</span> ${e.name}</td>\n\t\t\t\t\t<th>${e["V"+(this.year-1)]||""}</th>\n\t\t\t\t\t<th>${e[`V${this.year}`]||""}</th>\n\t\t\t\t\t<th class="C"></th>\n\t\t\t\t\t<th class="W"></th>\n\t\t\t\t\t${this.budget.suppliers.map((t=>e[t]?`<td class="C ${e[t][2]>e[t][0]?"R":"G"}">${e[t][2]||e[t][0]||""}</td><td class="W ${e[t][1]>e[t][3]?"R":"G"}">${e[t][3]||e[t][1]||""}</td>`:'<td class="C"></td><td class="W"></td>')).join("")} `;t.insertAdjacentHTML("beforeend",s)})),this.computeBudget(),this.querySelector("input").addEventListener("click",kvBudget.toggleIdle),this.querySelector(".customers").addEventListener("click",kvBudget.drillDown)}catch{console.log("Unable to render budget")}}computeBudget(){const t=this.querySelector("tbody");this.querySelectorAll("tbody tr").forEach((t=>{let e=0,s=0;for(let l=5;l<t.childElementCount;l+=2)e+=parseInt(t.children[l].innerText)||0,s+=parseInt(t.children[l+1].innerText)||0;t.children[3].innerText=e||"",t.children[4].innerText=s||""}));const e=this.querySelector("thead tr:last-child");for(let s=1;s<t.firstChild.children.length;s++){let l=0;for(let e=0;e<t.children.length;e++)l+=parseInt(t.children[e].children[s].innerText)||0;e.children[s].innerText=l||""}}static sumRows(t){let e=0;t.querySelectorAll("tbody tr").forEach((t=>e+=t.firstChild.firstChild.checked&&parseInt(t.lastElementChild.innerText)||0)),t.querySelector("thead tr:nth-child(2) td:last-child").innerHTML=e}static toggleRows(t){const e=t.target;if("checkbox"==e.getAttribute("type")){if("TH"==e.parentElement.tagName&&e.closest("thead"))t.currentTarget.querySelectorAll("tbody input").forEach((t=>t.checked=e.checked));else if("design"==e.parentElement.className)for(let t=e.closest("tr").nextElementSibling;t&&"design"!=t.firstChild.className;t=t.nextElementSibling)t.firstChild.firstChild.checked=e.checked;kvBudget.sumRows(e.closest(".budgetData"))}}static drillDown(t){const e=t.target,s=e.closest("kv-budget");if(s.removeAttribute("selected"),s.querySelector("td.selected")?.classList.remove("selected"),"TD"===e.tagName&&e.cellIndex>=5){let t=e.closest("tr").children[0].innerText.substring(0,5),l=s.querySelector("thead>tr").children[3+Math.ceil((e.cellIndex-4)/2)].innerText;s.setAttribute("selected",JSON.stringify({customer:t,supplier:l,values:[0,0,0,0]})),e.classList.add("selected"),s.editBudget()}}static toggleRange(t,e,s=!0){const l=t.querySelector("colgroup");for(let t=e[0];t<=(e[1]||e[0]);++t)l.children[t].style.visibility=s?"":"collapse"}static toggleIdle(t){const e=t.target,s=e.closest("kv-budget").querySelector("table"),l=e.closest("kv-budget").querySelector("thead tr:last-child");for(let t=5;t<l.childElementCount;t+=2)(""===l.children[t].innerText&&""===l.children[t+1].innerText||!e.checked)&&kvBudget.toggleRange(s,[3+Math.ceil((t-4)/2)],!e.checked)}}customElements.define("kv-budget",kvBudget);